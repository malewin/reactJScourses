import React from 'react';
import './App.css';
import { Provider } from 'react-redux';
import OrganizerApp from './components/OrganizerApp';
import store from './store/store';


const App = () => {

  // При загрузке приложения, пользователь видит три основных компонента: список задач (TodoList), поле для добавления новой задачи (AddTodo) и фильтр для выбора видимых задач (TodoFilter).

  // B TodoList, пользователь видит все текущие задачи. Задачи могут быть отмечены как выполненные или не   выполненные.

  // B AddTodo, пользователь может ввести текст новой задачи и добавить ее в список нажатием кнопки.

  // B TodoFilter, пользователь может фильтровать задачи на три категории: все, выполненные и невыполненные.

  // Все действия пользователя приводят к отправке действий в хранилище Redux через функции-действия,   определенные в файле todoActions.js.

  // Редуктор в файле todosReducer. js слушает действия и обновляет состояние в соответствии с этими действиями.

  // Компоненты реагируют на изменение состояния и обновляют отображение соответствующим образом.

  // Контекст фильтра (в файле FilterContext.js) предоставляет возможность изменять фильтр и получать его   значение в любом компоненте, который его использует.

  // Компонент высшего порядка withFilter.js оборачивает TodoList, предоставляя ему функциональность фильтрации   задач в соответствии с выбранным фильтром.

  // Хранилище Redux создается в файле store.js и передается в компонент Provider в файле index.js.
  return (
    <Provider store={store}>
      <OrganizerApp />
    </Provider>
  );
};

export default App;
